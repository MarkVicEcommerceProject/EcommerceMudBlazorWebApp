@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
    <section Class="flex flex-col justify-between gap-3.5 align-middle">
        <div>
        <MudNavLink Href="/admin" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home" IconColor="Color.Secondary">Home</MudNavLink>
        <MudNavLink Href="/admin/categories" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Category">Categories</MudNavLink>
        <MudNavLink Href="/admin/products" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ShoppingBag">Products</MudNavLink>
        <MudNavLink Href="/admin/orders" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ReceiptLong">Orders</MudNavLink>
        <MudNavLink Href="/admin/inventory" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Inventory">Inventory</MudNavLink>
    </div>
    
    <div>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="mud-nav-link mud-ripple">
                        <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Error" Class="mr-4"></MudIcon> Logout
                    </button>
                </form>
            </Authorized>
        </AuthorizeView>
    </div>
    </section>
       
</MudNavMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

