@page "/"
@using ECommerceMudblazorWebApp.Models
@using ECommerceMudblazorWebApp.Services.Cart
@using MudBlazor
@using ECommerceMudblazorWebApp.Components.Admin.Services
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject IProductService ProductService
@inject ICartService CartService
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

@if (IsLoading)
{
    <div class="flex justify-center mt-20">
        <MudProgressCircular Color="Color.Tertiary" Size="Size.Large" Indeterminate="true" />
    </div>
}
else
{
    <section class="font-inter mx-auto flex max-w-7xl flex-row gap-4 md:mx-auto md:px-4">

    <!-- Sidebar Categories -->
    <aside class="hidden w-64 md:block">
        <div class="rounded-lg bg-white p-4 shadow-sm">
            <h3 class="mb-4 font-semibold text-gray-800">Shop by Category</h3>
            <nav class="space-y-2">
                <MudLink Href="/products/Phones" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Phones</MudLink>
                <MudLink Href="/products/Computers" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Laptops and TV's</MudLink>
                <MudLink Href="#" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Watches</MudLink>
                <MudLink Href="/products/Home Appliances" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Home Appliances</MudLink>
                <MudLink Href="#" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Medicine</MudLink>
                <MudLink Href="#" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Sports & Outdoor Electronics</MudLink>
                <MudLink Href="/products/Kids Electronics" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Kids Electronics</MudLink>
                <MudLink Href="#" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Accessories</MudLink>
                <MudLink Href="#" Underline="Underline.None" Class="block rounded px-3 py-2 text-gray-700 hover:bg-gray-100">Health & Beauty</MudLink>
            </nav>
        </div>
    </aside>

    <!-- Hero Carousel Section -->
    <div class="flex-1 h-60 md:h-auto">
        <MudCarousel Class="mud-width-full min-h-52 md:h-full" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">

            <MudCarouselItem Transition="transition">
                <div class="relative flex h-full w-full overflow-hidden bg-black p-8 text-white md:rounded-lg">
                    <div class="z-10 flex w-1/2 flex-col justify-center gap-2">
                        <div class="mx-auto mb-4 flex items-center">
                            <MudIcon Icon="@Icons.Custom.Brands.Apple" Class="mr-2 text-2xl" />
                            <span class="text-lg">iPhone 14 Series</span>
                        </div>
                        <h2 class="mx-auto mb-4 text-4xl leading-tight font-bold">
                            Up to 10%<br />off Voucher
                        </h2>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" Class="text-white normal-case underline">
                            Shop Now →
                        </MudButton>
                    </div>
                    <div class="absolute inset-y-0 right-0 w-1/2">
                        <img src="./images/iphone.png" alt="iPhone" class="h-full w-full object-cover opacity-80" />
                    </div>
                </div>
            </MudCarouselItem>

            <MudCarouselItem Transition="transition">
                <div class="relative flex h-full w-full overflow-hidden rounded-lg bg-black p-8 text-white">
                    <div class="z-10 flex w-1/2 flex-col justify-center gap-2">
                        <div class="mx-auto mb-4 flex items-center">
                            <MudIcon Icon="@Icons.Custom.Brands.Apple" Class="mr-2 text-2xl" />
                            <span class="text-lg">iPhone 14 Series</span>
                        </div>
                        <h2 class="mx-auto mb-4 text-4xl leading-tight font-bold">
                            Up to 10%<br />off Voucher
                        </h2>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" Class="text-white normal-case underline"  Style="color:white">
                            Shop Now →
                        </MudButton>
                    </div>
                    <div class="absolute inset-y-0 right-0 w-1/2">
                        <img src="./images/iphone.png" alt="iPhone" class="h-full w-full object-cover opacity-80" />
                    </div>
                </div>
            </MudCarouselItem>

        </MudCarousel>

    </div>
</section>

    <section class="font-inter mt-10 w-full">
        <!-- Flash Sales Header -->
        <div class="mb-6 flex flex-col gap-4">
            <div class="flex items-center">
                <div class="mr-2 h-6 w-2 bg-[#DB4444]"></div>
                <MudText Typo="Typo.h6" Style="color:#DB4444" Class="text-c font-semibold">Today's</MudText>
            </div>

            <div class="flex flex-col gap-2 md:flex-row md:items-center md:justify-between md:gap-6 md:mx-3">
                <h3 class="text-xl font-bold md:text-2xl">Flash Sales</h3>
                <div class="flex items-center">
                    <span class="pr-2 font-semibold md:pr-4">Ends In:</span>
                    <div class="flex items-center gap-2 md:gap-3">
                        <div class="rounded bg-black px-2 py-1 text-sm text-white md:text-base">03</div>
                        <span class="text-black">:</span>
                        <div class="rounded bg-black px-2 py-1 text-sm text-white md:text-base">23</div>
                        <span class="text-black">:</span>
                        <div class="rounded bg-black px-2 py-1 text-sm text-white md:text-base">19</div>
                        <span class="text-black">:</span>
                        <div class="rounded bg-black px-2 py-1 text-sm text-white md:text-base">56</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="relative mb-8">
            <!-- Arrow Buttons -->
            <div class="flex justify-between absolute inset-0 items-center z-10 px-2 pointer-events-none">
                <MudIconButton Icon="@Icons.Material.Filled.ArrowBack"
                    Class="bg-white p-3 rounded-full shadow text-gray-800 pointer-events-auto hover:bg-gray-50 transition-all duration-300 transform hover:scale-110 opacity-90 hover:opacity-100"
                    Size="Size.Medium"
                    Style="color: #008000;"
                    UserAttributes="@(new() { { "id","prev-btn" } } )" />


                <MudIconButton Icon="@Icons.Material.Filled.ArrowForward"
                    Class="bg-white p-3 rounded-full shadow text-gray-800 pointer-events-auto hover:bg-gray-50 transition-all duration-300 transform hover:scale-110 opacity-90 hover:opacity-100"
                    Size="Size.Small" Style="color: #008000;" UserAttributes="@(new() { { "id","next-btn" } } )" />
            </div>

            <!-- Slider Container -->
            <div id="slider"
                class="flex overflow-x-auto [-ms-overflow-style:none] [scrollbar-width:none] py-6 gap-4 snap-x snap-mandatory px-2 scroll-smooth">
                @foreach (var product in Products)
                {
                    <div
                        class="snap-center flex-none w-72 transition-all duration-300 ease-[cubic-bezier(0.175,0.885,0.32,1.275)] hover:-translate-y-3 hover:shadow-xl rounded-[15px] overflow-hidden">
                        <MudCard Class="w-full h-full">
                            <MudCardMedia Image="@product.ImageUrl" Title="@product.Name" Height="192"
                                Class="h-48 bg-gray-50 flex justify-center items-center transition-transform duration-700 hover:scale-105 object-cover" />

                            <MudCardContent Class="p-4">
                                <h4 class="font-semibold text-base truncate">@product.Name</h4>
                                <p class="font-bold text-red-500">
                                    Ksh @product.Price
                                    <span class="text-gray-400 line-through">Ksh @product.Price</span>
                                </p>
                                <p class="text-yellow-500 text-sm">★★★★★ 5 </p>

                                <MudButton Variant="Variant.Filled" Color="Color.Default"
                                    Style="background-color:#DB4444;color:white" Class="mt-2 w-full">
                                    Add To Cart
                                </MudButton>
                            </MudCardContent>
                        </MudCard>
                    </div>
                }
            </div>
        </div>

        <!-- View All Hot Sales -->
        <div class="mx-auto mt-6 flex w-1/3 justify-center p-4">
            <MudLink Href="#" Underline="Underline.None" Color="Color.Default"
                Class="inline-block rounded px-6 py-3 hover:bg-secondaryButton/15"
                Style="background-color:#DB4444;color:white">
                View All Hot Sales
            </MudLink>
        </div>
    </section>



<section class="font-inter mt-10 w-full px-4">
    
    <div class="mb-6 flex items-center justify-between">
        <div class="flex h-10 items-center">
            <div class="mr-2 h-6 w-2 bg-[#DB4444]"></div>
            <span class="text-sm font-medium text-[#DB4444]">Categories</span>
        </div>

        <div class="flex space-x-2">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" />
            <MudIconButton Icon="@Icons.Material.Filled.ArrowForward"/>
        </div>
    </div>

    <h2 class="mb-6 text-2xl font-bold text-gray-900">Browse By Category</h2>

    <div class="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-6">
        
        @foreach(var category in Categories)
        {
            <MudLink Href="/products/iphone" Underline="Underline.None">
                <MudPaper
                    Class="flex min-h-36 cursor-pointer flex-col items-center justify-center p-4 transition-colors duration-200 hover:bg-gray-100"
                    OnClick="@(() => SelectCategory(category.Id))"
                    Style="border: 1px solid #e5e7eb; border-radius: 0.375rem;">
                    <MudIcon Icon="@GetCategoryIcon(category.Slug)" Size="Size.Large" Class="mb-2 text-gray-700" />
                    <span class="text-sm font-medium text-gray-900">@category.Name</span>
                </MudPaper>
            </MudLink>
            
        }

    </div>
</section>

<section class="mt-10 w-full font-inter">
    <div class="p-6">
        <div class="mb-4 flex items-center justify-between">
            <div class="ml-4 flex h-10 items-center">
                <div class="mr-2 h-6 w-2 bg-[#DB4444]"></div>
                <span class="text-sm font-medium text-[#DB4444]">This Month</span>
            </div>
            <MudButton Color="Color.Error" Variant="Variant.Filled" Class="rounded px-4 py-2" OnClick="@(()=> NavigationManager.NavigateTo("/products") )">View All</MudButton>
        </div>

        <h2 class="mb-6 text-2xl font-bold text-gray-900">Best Selling Products</h2>

        <MudGrid Gutter="GutterSize.Small" Justify="Justify.Center" Class="items-center">
            @foreach(var product in Products )
            {
                <MudItem xs="12" sm="6" md="3" Class="relative flex justify-center">
                    <MudCard Class="w-full cursor-pointer" @onclick="(()=>NavigateToDetails(product.Id))">

                        <MudCardMedia Image="@(product.ImageUrl ?? product.ImagePath ?? "./images/gridImage.png")"
                                    Class="h-48"
                                    Height="192"
                                    Title="@product.Name"
                                    Style="object-fit: cover; background-size: 250px;" />
                        <div class="absolute top-4 right-0 flex flex-col gap-1">
                            <MudIconButton Icon="@Icons.Material.Filled.FavoriteBorder" Variant="Variant.Text" Color="Color.Secondary" />
                            <MudIconButton Icon="@Icons.Material.Filled.Visibility" Color="Color.Default" />
                        </div>
                        <MudCardContent>
                            <h4 class="font-semibold">@product.Name</h4>
                            <p class="font-bold text-red-500">$@product.Price <span class="text-gray-400 line-through">$@(product.Price * 1.3m)</span></p>
                            <p class="text-yellow-500">★★★★★ (88)</p>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }


        </MudGrid>
    </div>
</section>

<!-- Music Experience Promo Section -->
<section class="font-inter mt-14 bg-black text-white">
    <div class="mx-auto grid max-w-7xl grid-cols-1 items-center gap-10 px-6 py-12 md:grid-cols-2 md:py-16">

        <!-- Left Text & Countdown -->
        <div class="flex flex-col md:gap-y-4 text-center md:text-left">
            <p class="text-center md:mb-2 font-medium text-green-500">Categories</p>
            <h2 class="text-center text-3xl leading-tight font-bold md:mb-2 md:text-4xl">
                Enhance Your<br />Music Experience
            </h2>

            <!-- Countdown -->
            <div class="flex justify-center space-x-3 md:justify-start">
                <div class="flex h-16 w-16 flex-col items-center justify-center rounded-full bg-white text-black">
                    <span class="text-xl font-bold">23</span>
                    <span class="text-xs">Hours</span>
                </div>
                <div class="flex h-16 w-16 flex-col items-center justify-center rounded-full bg-white text-black">
                    <span class="text-xl font-bold">05</span>
                    <span class="text-xs">Days</span>
                </div>
                <div class="flex h-16 w-16 flex-col items-center justify-center rounded-full bg-white text-black">
                    <span class="text-xl font-bold">59</span>
                    <span class="text-xs">Minutes</span>
                </div>
                <div class="flex h-16 w-16 flex-col items-center justify-center rounded-full bg-white text-black">
                    <span class="text-xl font-bold">35</span>
                    <span class="text-xs">Seconds</span>
                </div>
            </div>

            <!-- Call to Action -->
            <div class="flex justify-center md:justify-start">
                <MudButton Color="Color.Success" Variant="Variant.Filled" Class="rounded px-6 py-2">
                    Buy Now!
                </MudButton>
            </div>
        </div>

        <div class="flex justify-center">
            <img src="./images/jbl.png" alt="JBL Speaker" class="w-full max-w-sm object-contain" />
        </div>

    </div>
</section>
}

@code {

    // Carousel controls
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    // Categories
    private int SelectedCategoryIndex = 0;
    private List<Category> Categories = new();

    // Products
    public List<Product> Products = new();

    // State flags
    private bool _cartMerged = false;
    private bool IsLoading = true;

    //slider Initialization Flag
    private bool _sliderInitialized = false;

    protected override async Task OnInitializedAsync()
    {
        // Initialize categories
        Categories = new List<Category>
            {
            new Category{Id = 1, Name="iphones",Slug="smartphone"},
            new Category{Id = 2, Name="computers",Slug="computer"},
            new Category{Id = 3, Name="SmartWatch",Slug="watch"},
            new Category{Id = 4, Name="Camera",Slug="camera"},
            new Category{Id = 5, Name="Headphones",Slug="headphones"},
            new Category{Id = 6, Name="Gaming",Slug="gaming"},
            };

        SelectedCategoryIndex = 4;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //merging cart
                await MergeGuestCartIfNeededAsync();

                // Loading products after merging is completed
                Products = (await ProductService.GetAllProductsAsync()).ToList();

                StateHasChanged();

            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error during OnAfterRenderAsync: {ex.Message}");
            }
            finally
            {
                IsLoading = false;
                StateHasChanged();
            }
        }
        if (!_sliderInitialized && Products?.Count > 0)
        {
            _sliderInitialized = true;
            await Task.Delay(100);
            await JSRuntime.InvokeVoidAsync("initSlider");
        }
    }

    private async Task MergeGuestCartIfNeededAsync()
    {
        try
        {
            // Get or create guestId
            var guestId = await JSRuntime.InvokeAsync<string>("cartStorage.getGuestId");
            if (string.IsNullOrWhiteSpace(guestId))
            {
                guestId = Guid.NewGuid().ToString();
                await JSRuntime.InvokeVoidAsync("cartStorage.setGuestId", guestId);
            }

            if (_cartMerged) return;

            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                if (!string.IsNullOrWhiteSpace(userId))
                {
                    var merged = await CartService.MergeGuestCartToUserAsync(guestId, userId);

                    if (merged)
                    {
                        _cartMerged = true;
                        await JSRuntime.InvokeVoidAsync("cartStorage.clearGuestId");
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Cart merge failed: {ex.Message}");
        }
    }


    private void SelectCategory(int categoryId)
    {
        SelectedCategoryIndex = categoryId;
    }

    private string GetCategoryIcon(string slug)
    {
        return slug switch
        {
            "smartphone" => Icons.Material.Filled.Smartphone,
            "computer" => Icons.Material.Filled.Computer,
            "watch" => Icons.Material.Filled.Watch,
            "camera" => Icons.Material.Filled.PhotoCamera,
            "headphones" => Icons.Material.Filled.Headphones,
            "gaming" => Icons.Material.Filled.Gamepad,
            _ => Icons.Material.Filled.Category
        };
    }

    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/products/details/{id}");
    }
}
