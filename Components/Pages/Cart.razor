@using ECommerceMudblazorWebApp.Models
@using ECommerceMudblazorWebApp.Services
@inject NavigationManager NavigationManager
@inject ICartService CartService
@page "/cart"

<PageTitle>Shopping Cart</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="font-inter mt-4 rounded-lg shadow-md">
    <MudText Typo="Typo.h4" Class="mb-4 font-bold">
        Shopping Cart
    </MudText>

    <section class="flex flex-col gap-y-4">
        <MudTable Items="FilteredItems" T="CartItem" FixedFooter="true" Hover="true">
            <ToolBarContent>
                <MudText Typo="Typo.subtitle1" Class="font-semibold">
                    Total Items: @CartService.GetCartItemCount()
                </MudText>
                <MudSpacer />
                <MudTextField T="string" @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start"
                    AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Product</MudTh>
                <MudTh>Price</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Total</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd class="flex items-center gap-4">
                    <img src="@(context.Product.ImagePath)" alt="@context.Product.Name"
                        class="h-16 w-16 rounded object-cover" />
                    <MudText>@context.Product.Name</MudText>
                </MudTd>
                <MudTd>Ksh @context.Product.Price.ToString("N2")</MudTd>
                <MudTd>
                    <MudNumericField T="int" Value="context.Quantity" ValueChanged="@(q => UpdateQuantity(context.ProductId, q))"
                        Min="1" Max="@(context.Product.StockQuantity)"
                        Immediate="true" Variant="Variant.Outlined" />
                </MudTd>
                <MudTd>Ksh @((context.Product.Price * context.Quantity).ToString("N2"))</MudTd>
                <MudTd>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                        OnClick="() => CartService.RemoveFromCart(context.ProductId)" />
                </MudTd>
            </RowTemplate>
            
        </MudTable>
        <div class="mt-4 flex items-center justify-evenly">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                OnClick="@(() => NavigationManager.NavigateTo("/products"))">
                Return to Shop
            </MudButton>
            
            <MudButton Variant="Variant.Filled" Color="Color.Error"
                 OnClick="@(() => CartService.ClearCart())">
                 Clear Cart
            </MudButton>
            
            <MudButton Color="Color.Default" OnClick="@(()=> NavigationManager.Refresh())">Update Cart</MudButton>
        </div>
    </section>

    <div class="mt-10 flex flex-wrap items-start justify-between gap-6">

        <div class="mt-6 flex max-w-sm gap-2">
            <MudTextField T="string" Placeholder="Coupon Code" Variant="Variant.Outlined" Class="flex-grow" />
            <MudButton Variant="Variant.Filled" Color="Color.Secondary">Apply Coupon</MudButton>
        </div>
        <div class="w-1/2 rounded-sm bg-white p-4 shadow-md md:grow">
            <MudText Typo="Typo.h6" Class="mb-3 font-bold">Cart Total</MudText>

            <div class="my-3 flex justify-between">
                <MudText>Subtotal:</MudText>
                <MudText>Ksh @CartService.ShoppingCart.Items.Sum(i => i.Product.Price * i.Quantity)</MudText>
            </div>

            <div class="my-3 flex justify-between">
                <MudText>Shipping:</MudText>
                <MudText>Free</MudText>
            </div>

            <div class="mt-3 flex justify-between border-t pt-2 font-bold">
                <MudText>Total:</MudText>
                <MudText>Ksh @CartService.ShoppingCart.Items.Sum(i => i.Product.Price * i.Quantity)</MudText>
            </div>

            <MudButton Href="/checkout" Color="Color.Default" Class="@($" {(!CartItems.Any() ? "hidden cursor-not-allowed" : "")} mt-4 w-full")" Style="background-color: #DB4444;color: white;">
                Proceed to Checkout
            </MudButton>


        </div>
    </div>

    
</MudContainer>


@code {
    private string searchString1 { get; set; } = string.Empty;
    private ICollection<CartItem> CartItems => CartService.ShoppingCart.Items;
    private ICollection<CartItem> FilteredItems => string.IsNullOrWhiteSpace(searchString1) ?
    CartItems :
    CartItems.Where(item => item.Product.Name.Contains(searchString1, StringComparison.OrdinalIgnoreCase)).ToList();

    private void UpdateQuantity(int productId, int quantity)
    {
        CartService.UpdateQuantity(productId, quantity);
        StateHasChanged();
    }

}